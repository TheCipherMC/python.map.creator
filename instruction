```python
import os

def create_file(file_name, content=""):
    """Creates a new file with the specified name and optional content."""
    try:
        with open(file_name, "w") as file:
            file.write(content)
        print(f"File '{file_name}' created successfully.")
    except Exception as e:
        print(f"Error creating file: {e}")

def delete_file(file_name):
    """Deletes the specified file if it exists."""
    try:
        if os.path.exists(file_name):
            os.remove(file_name)
            print(f"File '{file_name}' deleted successfully.")
        else:
            print(f"File '{file_name}' not found.")
    except Exception as e:
        print(f"Error deleting file: {e}")

# Example Usage:
while True:
    action = input("Do you want to create or delete a file? (c/d/q to quit): ")

    if action.lower() == 'c':
        file_name = input("Enter the file name to create: ")
        content = input("Enter the content (optional): ")
        create_file(file_name, content)
    elif action.lower() == 'd':
        file_name = input("Enter the file name to delete: ")
        delete_file(file_name)
    elif action.lower() == 'q':
        break
    else:
        print("Invalid input. Please enter 'c', 'd', or 'q'.")
```

**How it Works:**

1. **Import the `os` module:**  The `os` module provides functions to interact with the operating system (including file operations).
2. **`create_file(file_name, content="")` function:**
   - Takes a `file_name` and optional `content` as input.
   - Uses a `try...except` block for error handling.
   - Opens the file in write mode (`"w"`). If the file doesn't exist, it will be created. If it does exist, its content will be overwritten.
   - Writes the content (if provided) to the file.
   - Prints a success message or an error message.
3. **`delete_file(file_name)` function:**
   - Takes a `file_name` as input.
   - Checks if the file exists using `os.path.exists()`.
   - If the file exists, it uses `os.remove()` to delete it and prints a success message.
   - If the file doesn't exist, it prints a message indicating the file was not found.
   - Includes error handling.
4. **Example Usage (main loop):**
   - Prompts the user to choose between creating or deleting a file, or quitting.
   - Calls the appropriate function based on the user's input.
   - Repeats until the user enters 'q'.



**Customizations:**

* **File Paths:** For specifying files outside of the current directory, use absolute paths (e.g., "C:\\Users\\YourName\\Documents\\my_file.txt").
* **Overwrite Protection:** Add a check before overwriting an existing file. Ask the user for confirmation or create a new file with a different name.
* **Multiple Files:** Extend the functions to create or delete multiple files at once.
* **File Types:** Filter files by extension (e.g., only `.txt` files).    
